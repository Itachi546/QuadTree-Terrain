<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{e98a9707-66c3-4088-bd68-176d062d953d}</ProjectGuid>
    <RootNamespace>vulkan</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)build\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)build-int\$(Platform)\$(Configuration)\</IntDir>
    <IncludePath>C:\VulkanSDK\1.2.141.2\Include;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)build\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)build-int\$(Platform)\$(Configuration)\</IntDir>
    <IncludePath>C:\VulkanSDK\1.2.141.2\Include;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions);_GLFW_WIN32;_CRT_SECURE_NO_WARNINGS</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)vulkan\src;$(ProjectDir)\external;$(ProjectDir)\external\GLFW\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>vulkan-1.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(VULKAN_SDK)\Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
    </Link>
    <CustomBuildStep>
      <Command>
      </Command>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>
      </Outputs>
      <Inputs>
      </Inputs>
    </CustomBuildStep>
    <CustomBuild>
      <Command>$(VULKAN_SDK)\Bin\glslangValidator -V -o $(ProjectDir)\spirv\%(Filename)%(Extension).spv %(Identity)</Command>
      <Message>Compiling Shaders</Message>
      <Outputs>$(ProjectDir)\spirv\%(Filename)%(Extension).spv</Outputs>
      <LinkObjects>false</LinkObjects>
      <BuildInParallel>true</BuildInParallel>
    </CustomBuild>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions);_GLFW_WIN32;_CRT_SECURE_NO_WARNINGS</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)vulkan\src;$(ProjectDir)\external;$(ProjectDir)\external\GLFW\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>vulkan-1.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(VULKAN_SDK)\Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <CustomBuildStep>
      <Command>
      </Command>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>
      </Outputs>
      <Inputs>
      </Inputs>
    </CustomBuildStep>
    <CustomBuild>
      <Command>$(VULKAN_SDK)\Bin\glslangValidator -V -o $(ProjectDir)\spirv\%(Filename)%(Extension).spv %(Identity)</Command>
      <Message>Compiling Shaders</Message>
      <Outputs>$(ProjectDir)\spirv\%(Filename)%(Extension).spv</Outputs>
      <LinkObjects>false</LinkObjects>
      <BuildInParallel>true</BuildInParallel>
    </CustomBuild>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="external\GLFW\src\context.c" />
    <ClCompile Include="external\GLFW\src\egl_context.c" />
    <ClCompile Include="external\GLFW\src\init.c" />
    <ClCompile Include="external\GLFW\src\input.c" />
    <ClCompile Include="external\GLFW\src\monitor.c" />
    <ClCompile Include="external\GLFW\src\osmesa_context.c" />
    <ClCompile Include="external\GLFW\src\vulkan.c" />
    <ClCompile Include="external\GLFW\src\wgl_context.c" />
    <ClCompile Include="external\GLFW\src\win32_init.c" />
    <ClCompile Include="external\GLFW\src\win32_joystick.c" />
    <ClCompile Include="external\GLFW\src\win32_monitor.c" />
    <ClCompile Include="external\GLFW\src\win32_thread.c" />
    <ClCompile Include="external\GLFW\src\win32_time.c" />
    <ClCompile Include="external\GLFW\src\win32_window.c" />
    <ClCompile Include="external\GLFW\src\window.c" />
    <ClCompile Include="external\imgui\imgui.cpp" />
    <ClCompile Include="external\imgui\imgui_demo.cpp" />
    <ClCompile Include="external\imgui\imgui_draw.cpp" />
    <ClCompile Include="external\imgui\imgui_impl_glfw.cpp" />
    <ClCompile Include="external\imgui\imgui_impl_vulkan.cpp" />
    <ClCompile Include="external\imgui\imgui_tables.cpp" />
    <ClCompile Include="external\imgui\imgui_widgets.cpp" />
    <ClCompile Include="src\atmosphere\atmosphere.cpp" />
    <ClCompile Include="src\renderer\vulkan\vulkan_query.cpp" />
    <ClCompile Include="src\utils\diffuse_irradiance_generator.cpp" />
    <ClCompile Include="src\utils\skybox.cpp" />
    <ClCompile Include="src\water\normal_map_generator.cpp" />
    <ClCompile Include="src\common\spirv_reflect.c" />
    <ClCompile Include="src\debug\gizmo.cpp" />
    <ClCompile Include="src\fx\outlinefx.cpp" />
    <ClCompile Include="src\light\cascaded_shadow.cpp" />
    <ClCompile Include="src\main.cpp" />
    <ClCompile Include="src\physics\collision_detection.cpp" />
    <ClCompile Include="src\physics\physics_system.cpp" />
    <ClCompile Include="src\renderer\vulkan\vulkan_framebuffer.cpp" />
    <ClCompile Include="src\renderer\vulkan\vulkan_texture.cpp" />
    <ClCompile Include="src\scene\camera.cpp" />
    <ClCompile Include="src\scene\mesh.cpp" />
    <ClCompile Include="src\debug\debug_draw.cpp" />
    <ClCompile Include="src\renderer\device.cpp" />
    <ClCompile Include="src\renderer\vulkan\vulkan_api.cpp" />
    <ClCompile Include="src\renderer\vulkan\vulkan_common.cpp" />
    <ClCompile Include="src\renderer\vulkan\vulkan_context.cpp" />
    <ClCompile Include="src\renderer\vulkan\vulkan_graphics_window.cpp" />
    <ClCompile Include="src\renderer\vulkan\vulkan_pipeline.cpp" />
    <ClCompile Include="src\renderer\vulkan\vulkan_renderpass.cpp" />
    <ClCompile Include="src\renderer\vulkan\vulkan_swapchain.cpp" />
    <ClCompile Include="src\renderer\vulkan\vulkan_buffer.cpp" />
    <ClCompile Include="src\scene\scene.cpp" />
    <ClCompile Include="src\terrain\terrain.cpp" />
    <ClCompile Include="src\terrain\terrain_chunk.cpp" />
    <ClCompile Include="src\terrain\terrain_chunkmanager.cpp" />
    <ClCompile Include="src\terrain\terrain_quadtree.cpp" />
    <ClCompile Include="src\terrain\terrain_stream.cpp" />
    <ClCompile Include="src\water\inversion.cpp" />
    <ClCompile Include="src\water\twiddle_factors.cpp" />
    <ClCompile Include="src\water\butterfly.cpp" />
    <ClCompile Include="src\water\spectrum_texture.cpp" />
    <ClCompile Include="src\water\water.cpp" />
    <ClCompile Include="src\water\water_renderer.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="external\GLFW\src\egl_context.h" />
    <ClInclude Include="external\GLFW\src\internal.h" />
    <ClInclude Include="external\GLFW\src\mappings.h" />
    <ClInclude Include="external\GLFW\src\osmesa_context.h" />
    <ClInclude Include="external\GLFW\src\wgl_context.h" />
    <ClInclude Include="external\GLFW\src\win32_joystick.h" />
    <ClInclude Include="external\GLFW\src\win32_platform.h" />
    <ClInclude Include="external\imgui\imconfig.h" />
    <ClInclude Include="external\imgui\imgui.h" />
    <ClInclude Include="external\imgui\imgui_impl_glfw.h" />
    <ClInclude Include="external\imgui\imgui_impl_vulkan.h" />
    <ClInclude Include="external\imgui\imgui_internal.h" />
    <ClInclude Include="external\imgui\imstb_rectpack.h" />
    <ClInclude Include="external\imgui\imstb_textedit.h" />
    <ClInclude Include="external\imgui\imstb_truetype.h" />
    <CustomBuild Include="shaders\water\water_nodisp.vert">
      <FileType>Document</FileType>
    </CustomBuild>
    <ClInclude Include="src\atmosphere\atmosphere.h" />
    <ClInclude Include="src\atmosphere_example.h" />
    <ClInclude Include="src\common\image_loader.h" />
    <ClInclude Include="src\renderer\gpu_query.h" />
    <ClInclude Include="src\renderer\vulkan\vulkan_query.h" />
    <ClInclude Include="src\utils\diffuse_irradiance_generator.h" />
    <ClInclude Include="src\utils\skybox.h" />
    <ClInclude Include="src\water\normal_map_generator.h" />
    <ClInclude Include="src\common\common.h" />
    <ClInclude Include="src\common\spirv.h" />
    <ClInclude Include="src\common\spirv_reflect.h" />
    <ClInclude Include="src\core\base.h" />
    <ClInclude Include="src\core\frustum.h" />
    <ClInclude Include="src\core\math.h" />
    <ClInclude Include="src\core\plane.h" />
    <ClInclude Include="src\core\ray.h" />
    <ClInclude Include="src\cube_example.h" />
    <ClInclude Include="src\debug\gizmo.h" />
    <ClInclude Include="src\example_base.h" />
    <ClInclude Include="src\fx\outlinefx.h" />
    <ClInclude Include="src\light\cascaded_shadow.h" />
    <ClInclude Include="src\light\directional_light.h" />
    <ClInclude Include="src\light\light.h" />
    <ClInclude Include="src\physics\collider.h" />
    <ClInclude Include="src\physics\collision_detection.h" />
    <ClInclude Include="src\physics\manifold.h" />
    <ClInclude Include="src\physics\physics.h" />
    <ClInclude Include="src\physics\physics_system.h" />
    <ClInclude Include="src\physics\plane_collider.h" />
    <ClInclude Include="src\physics\rigidbody.h" />
    <ClInclude Include="src\physics\sphere_collider.h" />
    <ClInclude Include="src\gizmo_example.h" />
    <ClInclude Include="src\renderer\framebuffer.h" />
    <ClInclude Include="src\renderer\texture.h" />
    <ClInclude Include="src\renderer\vulkan\vulkan_framebuffer.h" />
    <ClInclude Include="src\renderer\vulkan\vulkan_includes.h" />
    <ClInclude Include="src\renderer\vulkan\vulkan_texture.h" />
    <ClInclude Include="src\scene\camera.h" />
    <ClInclude Include="src\scene\entity.h" />
    <ClInclude Include="src\scene\gpu_memory.h" />
    <ClInclude Include="src\scene\mesh.h" />
    <ClInclude Include="src\debug\debug_draw.h" />
    <ClInclude Include="src\renderer\graphics_enums.h" />
    <ClInclude Include="src\renderer\device.h" />
    <ClInclude Include="src\input\input_keys.h" />
    <ClInclude Include="src\input\keyboard.h" />
    <ClInclude Include="src\input\mouse.h" />
    <ClInclude Include="src\renderer\graphics_api.h" />
    <ClInclude Include="src\renderer\graphics_window.h" />
    <ClInclude Include="src\renderer\context.h" />
    <ClInclude Include="src\renderer\pipeline.h" />
    <ClInclude Include="src\renderer\renderpass.h" />
    <ClInclude Include="src\renderer\renderer.h" />
    <ClInclude Include="src\renderer\shaderbinding.h" />
    <ClInclude Include="src\renderer\swapchain.h" />
    <ClInclude Include="src\renderer\buffer.h" />
    <ClInclude Include="src\renderer\vulkan\vulkan_context.h" />
    <ClInclude Include="src\renderer\vulkan\vulkan_renderpass.h" />
    <ClInclude Include="src\renderer\vulkan\vulkan_shaderbidings.h" />
    <ClInclude Include="src\renderer\vulkan\vulkan_type_converter.h" />
    <ClInclude Include="src\renderer\vulkan\vulkan_api.h" />
    <ClInclude Include="src\renderer\vulkan\vulkan_graphics_window.h" />
    <ClInclude Include="src\renderer\vulkan\vulkan_common.h" />
    <ClInclude Include="src\renderer\vulkan\vulkan_pipeline.h" />
    <ClInclude Include="src\renderer\vulkan\vulkan_swapchain.h" />
    <ClInclude Include="src\renderer\vulkan\vulkan_buffer.h" />
    <ClInclude Include="src\scene\scene.h" />
    <ClInclude Include="src\terrain\perlin_noise.h" />
    <ClInclude Include="src\terrain\terrain.h" />
    <ClInclude Include="src\terrain\terrain_chunk.h" />
    <ClInclude Include="src\terrain\terrain_chunkmanager.h" />
    <ClInclude Include="src\terrain\terrain_quadtree.h" />
    <ClInclude Include="src\terrain_example.h" />
    <ClInclude Include="src\terrain\terrain_stream.h" />
    <ClInclude Include="src\water\inversion.h" />
    <ClInclude Include="src\water\twiddle_factors.h" />
    <ClInclude Include="src\water\butterfly.h" />
    <ClInclude Include="src\water\spectrum_texture.h" />
    <ClInclude Include="src\water\water.h" />
    <ClInclude Include="src\water\water_renderer.h" />
    <ClInclude Include="src\water_example.h" />
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="shaders\main.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(VULKAN_SDK)\Bin\glslangValidator -V -o $(ProjectDir)\spirv\%(Filename)%(Extension).spv %(Identity)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling Shaders</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(VULKAN_SDK)\Bin\glslangValidator -V -o $(ProjectDir)\spirv\%(Filename)%(Extension).spv %(Identity)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling Shaders</Message>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\spirv\%(Filename)%(Extension).spv</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\spirv\%(Filename)%(Extension).spv</Outputs>
    </CustomBuild>
    <CustomBuild Include="shaders\main.vert">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(VULKAN_SDK)\Bin\glslangValidator -V -o $(ProjectDir)\spirv\%(Filename)%(Extension).spv %(Identity)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling Shaders</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(VULKAN_SDK)\Bin\glslangValidator -V -o $(ProjectDir)\spirv\%(Filename)%(Extension).spv %(Identity)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling Shaders</Message>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)\spirv\%(Filename)%(Extension).spv</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectDir)\spirv\%(Filename)%(Extension).spv</Outputs>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="shaders\debug\line.frag">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\debug\line.vert">
      <FileType>Document</FileType>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="shaders\debug\outline.frag">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\debug\outline.vert">
      <FileType>Document</FileType>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="shaders\debug\edge_detection.frag">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\debug\image2D.vert">
      <FileType>Document</FileType>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="shaders\debug\image2D.frag">
      <FileType>Document</FileType>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="shaders\terrain\terrain.frag">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\terrain\terrain.vert">
      <FileType>Document</FileType>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="shaders\shadow\shadow.frag">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\shadow\shadow.vert">
      <FileType>Document</FileType>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="cpp.hint" />
    <CustomBuild Include="shaders\water\philipSpectrum.comp">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\water\twiddleFactors.comp">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\water\hdt.comp">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\water\butterflyOperation.comp">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\water\inversion.comp">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\water\water.frag">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\water\water.vert">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\debug\edge_detection.vert">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\water\normalmap.comp">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\water\water_offscreen.frag">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\water\water_offscreen.vert">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\water\water_offscreen_terrain.frag">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\water\water_offscreen_terrain.vert">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\water\water_nodisp.frag">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\atmosphere\precompute_transmittance.comp">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\atmosphere\atmosphere.frag">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\atmosphere\atmosphere.vert">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\atmosphere\atmosphere_baked.frag">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\atmosphere\atmosphere.comp">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\cubemap\cubemap.frag">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\cubemap\cubemap.vert">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\cubemap\diffuse_irradiance.comp">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="shaders\cubemap\equirectangular_to_cubemap.comp">
      <FileType>Document</FileType>
    </CustomBuild>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>