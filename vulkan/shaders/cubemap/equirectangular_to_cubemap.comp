#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_GOOGLE_include_directive   : require

#define LOCAL_SIZE 32
layout(local_size_x = LOCAL_SIZE, local_size_y = LOCAL_SIZE, local_size_z = 1) in;

#include "cubemap.h"

layout(binding = 0)  uniform sampler2D u_equirectangularMap;
layout(binding = 1, rgba32f)  uniform writeonly imageCube u_cubemap;

const vec2 invAtan = vec2(0.1591, 0.3183);

vec2 sample_spherical_map(vec3 v)
{
    vec2 uv = vec2(atan(v.z, v.x), asin(v.y));
    uv *= invAtan;
    uv += 0.5;
    return uv;
}

void main()
{
    ivec3 uv = ivec3(gl_GlobalInvocationID.xyz);
    vec3 direction = normalize(cubeCoordToWorld(uv, vec2(1024.0)));

    vec2 sphericalCoord = sample_spherical_map(direction);
    vec4 result = texture(u_equirectangularMap, sphericalCoord);
    imageStore(u_cubemap, uv, result);
}