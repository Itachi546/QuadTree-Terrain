#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_GOOGLE_include_directive   : require

#include "complex.h"

#define PI 3.1415926535897932384626433832795
#define PI2 2.0 * PI

layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0, rgba32f) uniform readonly image2D twiddleFactors;
layout(binding = 1, rg32f)    uniform image2D pingpong0;
layout(binding = 2, rg32f)    uniform image2D pingpong1;

layout(push_constant) uniform block
{
   int u_Stage;
   int u_PingPong;
   int u_Direction;
};

void horizontalButterflies()
{
    complex H;
    ivec2   x = ivec2(gl_GlobalInvocationID.xy);

    if (u_PingPong == 0)
    {
        vec4 data = imageLoad(twiddleFactors, ivec2(u_Stage, x.x)).rgba;
        vec2 p_   = imageLoad(pingpong0, ivec2(data.z, x.y)).rg;
        vec2 q_   = imageLoad(pingpong0, ivec2(data.w, x.y)).rg;
        vec2 w_   = vec2(data.x, data.y);

        complex p = complex(p_.x, p_.y);
        complex q = complex(q_.x, q_.y);
        complex w = complex(w_.x, w_.y);

        //Butterfly operation
        H = add(p, mul(w, q));

        imageStore(pingpong1, x, vec4(H.r, H.im, 0, 1));
    }
    else if (u_PingPong == 1)
    {
        vec4 data = imageLoad(twiddleFactors, ivec2(u_Stage, x.x)).rgba;
        vec2 p_   = imageLoad(pingpong1, ivec2(data.z, x.y)).rg;
        vec2 q_   = imageLoad(pingpong1, ivec2(data.w, x.y)).rg;
        vec2 w_   = vec2(data.x, data.y);

        complex p = complex(p_.x, p_.y);
        complex q = complex(q_.x, q_.y);
        complex w = complex(w_.x, w_.y);

        //Butterfly operation
        H = add(p, mul(w, q));

        imageStore(pingpong0, x, vec4(H.r, H.im, 0, 1));
    }
}

// ------------------------------------------------------------------

void verticalButterflies()
{
    complex H;
    ivec2   x = ivec2(gl_GlobalInvocationID.xy);

    if (u_PingPong == 0)
    {
        vec4 data = imageLoad(twiddleFactors, ivec2(u_Stage, x.y)).rgba;
        vec2 p_   = imageLoad(pingpong0, ivec2(x.x, data.z)).rg;
        vec2 q_   = imageLoad(pingpong0, ivec2(x.x, data.w)).rg;
        vec2 w_   = vec2(data.x, data.y);

        complex p = complex(p_.x, p_.y);
        complex q = complex(q_.x, q_.y);
        complex w = complex(w_.x, w_.y);

        //Butterfly operation
        H = add(p, mul(w, q));

        imageStore(pingpong1, x, vec4(H.r, H.im, 0, 1));
    }
    else if (u_PingPong == 1)
    {
        vec4 data = imageLoad(twiddleFactors, ivec2(u_Stage, x.y)).rgba;
        vec2 p_   = imageLoad(pingpong1, ivec2(x.x, data.z)).rg;
        vec2 q_   = imageLoad(pingpong1, ivec2(x.x, data.w)).rg;
        vec2 w_   = vec2(data.x, data.y);

        complex p = complex(p_.x, p_.y);
        complex q = complex(q_.x, q_.y);
        complex w = complex(w_.x, w_.y);

        //Butterfly operation
        H = add(p, mul(w, q));

        imageStore(pingpong0, x, vec4(H.r, H.im, 0, 1));
    }
}

void main()
{
    if(u_Direction == 0)
      horizontalButterflies();
    else if(u_Direction == 1)
      verticalButterflies();
}